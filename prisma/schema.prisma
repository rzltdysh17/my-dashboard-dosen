// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Dosen {
  id               Int    @id @default(autoincrement())
  nama             String
  nidn             String @unique
  jenjang_terakhir String
  bidang_keahlian  String
  jabatan_akademik String

  // Define the reverse relations
  kkn1 KKN[] @relation("Dosen1")
  kkn2 KKN[] @relation("Dosen2")

  akademik       BimbinganAkademik[] @relation("AkademikDosen")
  skripsi        BimbinganSkripsi[]  @relation("SkripsiDosen")
  pengujiSkripsi PengujiSkripsi[]    @relation("PengujiDosen")
  lomba          BimbinganLomba[]    @relation("LombaDosen")
  kurikulum      Kurikulum[]         @relation("KurikulumDosen")
  seminar        PesertaSeminar[]    @relation("PesertaSeminar")
  publikasi      PublikasiJurnal[]   @relation("PublikasiDosen")
  penelitian     Penelitian[]        @relation("PenelitianDosen")
  pengabdian     Pengabdian[]        @relation("PengabdianDosen")
  kegiatanLuar   KegiatanLuar[]      @relation("KegiatanDosen")
  penghargaan    Penghargaan[]       @relation("PenghargaanDosen")
  sertifikat     Sertifikat[]        @relation("SertifikatDosen")
  buku           BukuBahanAjar[]     @relation("BukuDosen")
}

model Mahasiswa {
  nim            Int    @id @unique
  nama           String
  tahun_angkatan Int
  status         String

  // Relasi
  akademik BimbinganAkademik[] @relation("AkademikMahasiswa")
  skripsi  Skripsi[]           @relation("SkripsiMahasiswa")
  kkn      PesertaKKN?       @relation("PesertaKKN")
  lomba    PesertaLomba[]      @relation("PesertaLomba")
}

model BimbinganAkademik {
  id            Int    @id @default(autoincrement())
  id_dosen      Int
  nim           Int    @unique
  tahun_masuk   Int
  tahun_selesai Int?
  status        String

  // relasi dengan Mahasiswa dan Dosen
  mahasiswa Mahasiswa @relation("AkademikMahasiswa", fields: [nim], references: [nim])
  dosen     Dosen     @relation("AkademikDosen", fields: [id_dosen], references: [id])
}

model Skripsi {
  id            Int    @id @default(autoincrement())
  nim           Int    @unique
  judul_skripsi String
  status        String

  // relasi dengan Mahasiswa, Bimbingan SKripsi, dan Penguji Skripsi
  mahasiswa        Mahasiswa          @relation("SkripsiMahasiswa", fields: [nim], references: [nim])
  bimbinganSkripsi BimbinganSkripsi[] @relation("Skripsi")
  pengujiSkripsi   PengujiSkripsi[]   @relation("PengujiSkripsi")
}

model BimbinganSkripsi {
  id         Int @id @default(autoincrement())
  id_dosen   Int
  id_skripsi Int
  pembimbing Int

  // relasi dengan Dosen dan Skripsi
  dosen   Dosen   @relation("SkripsiDosen", fields: [id_dosen], references: [id])
  skripsi Skripsi @relation("Skripsi", fields: [id_skripsi], references: [id])
}

model PengujiSkripsi {
  id         Int @id @default(autoincrement())
  id_dosen   Int
  id_skripsi Int
  penguji    Int

  // relasi dengan Dosen dan Skripsi
  dosen   Dosen   @relation("PengujiDosen", fields: [id_dosen], references: [id])
  skripsi Skripsi @relation("PengujiSkripsi", fields: [id_skripsi], references: [id])
}

model KKN {
  id        Int    @id @default(autoincrement())
  id_dosen1 Int
  id_dosen2 Int
  judul_kkn String
  lokasi    String
  durasi    String
  tahun     String
  status    String

  // Define the foreign key relations
  dosenPembingbing1 Dosen @relation("Dosen1", fields: [id_dosen1], references: [id])
  dosenPembingbing2 Dosen @relation("Dosen2", fields: [id_dosen2], references: [id])

  mahasiswa PesertaKKN[] @relation("kkn_mahasiswa")

  // Ensure the combination of id_dosen1 and id_dosen2 is unique
  @@unique([id_dosen1, id_dosen2])
}

model PesertaKKN {
  id           Int @id @default(autoincrement())
  id_mahasiswa Int @unique
  id_kkn       Int

  // relasi dengan Mahasiswa dan KKN
  mahasiswa Mahasiswa @relation("PesertaKKN", fields: [id_mahasiswa], references: [nim])
  kkn       KKN       @relation("kkn_mahasiswa", fields: [id_kkn], references: [id])
}

model Lomba {
  id            Int    @id @default(autoincrement())
  nama_lomba    String
  jenis_lomba   String
  tingkat_lomba String
  lembaga       String
  tahun         Int

  // Relasi dengan BimbinganLomba dan PesertaLomba
  bimbinganLomba BimbinganLomba[] @relation("BimbinganLomba")
  pesertaLomba   PesertaLomba[]   @relation("PesertaLomba")
}

model PesertaLomba {
  id       Int    @id @default(autoincrement())
  id_lomba Int
  nim      Int
  juara    String

  // Relasi dengan Lomba dan Mahasiswa
  lomba     Lomba     @relation("PesertaLomba", fields: [id_lomba], references: [id])
  mahasiswa Mahasiswa @relation("PesertaLomba", fields: [nim], references: [nim])
}

model BimbinganLomba {
  id         Int @id @default(autoincrement())
  id_dosen   Int
  id_lomba   Int
  pembimbing Int

  // relasi dengan Dosen dan Lomba
  dosen Dosen @relation("LombaDosen", fields: [id_dosen], references: [id])
  lomba Lomba @relation("BimbinganLomba", fields: [id_lomba], references: [id])
}

model Kurikulum {
  kode_matkul         String @id @unique
  id_dosen            Int
  semester            Int
  nama_matkul         String
  sks                 Int
  metode_pembelajaran String

  // relasi dengan Dosen
  dosen Dosen @relation("KurikulumDosen", fields: [id_dosen], references: [id])
}

model Seminar {
  id            Int      @id @default(autoincrement())
  judul         String
  jenis_seminar String
  lokasi        String
  tanggal       DateTime
  status        String

  // relasi dengan Dosen dan PesertaSeminar
  pesertaSeminar PesertaSeminar[] @relation("PesertaSeminar")
}

model PesertaSeminar {
  id         Int    @id @default(autoincrement())
  id_seminar Int
  id_dosen   Int
  peran      String

  seminar Seminar @relation("PesertaSeminar", fields: [id_seminar], references: [id])
  dosen   Dosen   @relation("PesertaSeminar", fields: [id_dosen], references: [id])
}

model PublikasiJurnal {
  id            Int    @id @default(autoincrement())
  id_dosen      Int
  judul         String
  jenis_jurnal  String
  penerbit      String
  tahun         Int
  jumlah_sitasi Int
  status        String

  // relasi dengan Dosen
  dosen Dosen @relation("PublikasiDosen", fields: [id_dosen], references: [id])
}

model Penelitian {
  id               Int     @id @default(autoincrement())
  id_dosen         Int
  judul_penelitian String
  tahun            Int
  sumber_dana      String
  jumlah_dana      Int
  rekoginisi       String
  penerapan        Boolean
  pengajuan_hki    Boolean
  produk           Boolean

  // relasi dengan Dosen
  dosen Dosen @relation("PenelitianDosen", fields: [id_dosen], references: [id])
}

model Pengabdian {
  id               Int     @id @default(autoincrement())
  id_dosen         Int
  judul_pengabdian String
  lokasi           String
  tahun            Int
  rekoginisi       String
  penerapan        Boolean
  produk           Boolean
  pengajuan_hki    Boolean

  // relasi dengan Dosen
  dosen Dosen @relation("PengabdianDosen", fields: [id_dosen], references: [id])
}

model KegiatanLuar {
  id             Int      @id @default(autoincrement())
  id_dosen       Int
  judul_kegiatan String
  jenis_kegiatan String
  lokasi         String
  tanggal        DateTime

  // relasi dengan Dosen
  dosen Dosen @relation("KegiatanDosen", fields: [id_dosen], references: [id])
}

model Penghargaan {
  id                  Int      @id @default(autoincrement())
  id_dosen            Int
  nama_penghargaan    String
  jenis_penghargaan   String
  lembaga             String
  tahun               Int
  tanggal_penghargaan DateTime

  // relasi dengan Dosen
  dosen Dosen @relation("PenghargaanDosen", fields: [id_dosen], references: [id])
}

model Sertifikat {
  id                 Int      @id @default(autoincrement())
  id_dosen           Int
  nama_sertifikat    String
  jenis_sertifikat   String
  lembaga            String
  bidang_kompetensi  String
  tanggal_terbit     DateTime
  tanggal_kadaluarsa DateTime

  // relasi dengan Dosen
  dosen Dosen @relation("SertifikatDosen", fields: [id_dosen], references: [id])
}

model BukuBahanAjar {
  id         Int    @id @default(autoincrement())
  id_dosen   Int
  judul_buku String
  jenis_buku String
  penerbit   String
  tahun      Int
  status     String

  // relasi dengan Dosen
  dosen Dosen @relation("BukuDosen", fields: [id_dosen], references: [id])
}
